{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>The IBM DevOps Deploy Plugin for Terraform on AWS is designed to integrate Terraform capabilities with IBM DevOps Deploy.</p> <p>This enables automated provisioning of AWS cloud resources within an enterprise DevOps pipeline.</p> <p>This plugin allows you to  deploy AWS infrastructure using Terraform, ensuring consistency, repeatability, and automation in your DevOps workflows.</p>"},{"location":"#compatibility","title":"Compatibility","text":"<p>The plug-in is compatible with:</p> <ul> <li>UrbanCode Deploy version 7.0.0 or later</li> <li>IBM Java 8 or higher</li> </ul>"},{"location":"#available-steps","title":"Available Steps","text":"<ul> <li>Run Terraform Command (AWS).</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>No special steps are required for installation. See Installing plug-ins in UrbanCode products.</p>"},{"location":"#history","title":"History","text":""},{"location":"#version-01","title":"Version 0.1","text":"<ul> <li>Initial release of the new Terraform Plugin.</li> </ul>"},{"location":"downloads/","title":"Downloads","text":"<p>To download the plug-in, click the following version-specific links.</p> <ul> <li>Deploy-plugins-terraform-iaac-0.1</li> </ul>"},{"location":"steps/","title":"Steps","text":""},{"location":"steps/#process-steps-in-the-terraform-iaac-plug-in","title":"Process steps in the Terraform-IAAC plug-in","text":""},{"location":"steps/#run-terraform-command-aws","title":"Run Terraform Command (AWS)","text":"<p>Use this step to run a terraform script.</p> Name Type Description Required Terraform Contents String Contents of the .tf file Or Full path of the .tf file that contains all configurations needed for a resource creation for any cloud service provider. Yes Terraform Command String Full path of the terraform installation. Ex: /usr/local/bin/. Yes AWS Role String AWS Role to assume. No"},{"location":"usage/","title":"Usage","text":"<p>You can use the Terraform plug-in to execute any terraform script related to the AWS cloud services.</p>"},{"location":"usage/#example","title":"Example:","text":"<p>You can use this plug-in to create an EC2 instance.</p> <p>You can have a terraform script as below that has all the specifications to create an EC2 instance in a file named EC2.tf.</p> <pre><code>provider \"aws\" {\nregion = \"us-east-1\"\n}\n\nresource \"aws_instance\" \"example\" {\nami           = \"ami-01816d07b1128cd2d\"\ninstance_type = \"t2.micro\"\nsubnet_id     = \"subnet-id*******\"\n\ntags = {\nName = \"instance-name-xyz\"\n}\n\nassociate_public_ip_address = false\nsecurity_groups = [\"sg-id******\"]\n}\n</code></pre> <p>You need to provide the full path of the script as shown in the image below.</p> <p>You need to provide the path of the Terraform executable command and the AWS role that is needed to assume.</p> <p></p> <p>Once the plugin step is run it will automatically assume the AWS role and run the essential Terraform commands  which are \"terraform init\" and \"terraform apply -auto-approve\" to launch an ec2 instance.</p> <p></p> <p>You can verify if the EC2 instance got created in the AWS console by searching the Tag name \"instance-name-xyz\".</p>"}]}